security:
  # Password hashing configuration
  password_hashers:
    Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: "auto"

  # User providers configuration
  providers:
    app_user_provider:
      entity:
        class: App\Entity\User
        property: email

  # Firewalls configuration
  firewalls:
    # Firewall for the login path, using JSON login
    login:
      pattern: ^/api/login
      stateless: true
      json_login:
        check_path: /api/login_check
        username_path: email
        password_path: password
        success_handler: lexik_jwt_authentication.handler.authentication_success
        failure_handler: lexik_jwt_authentication.handler.authentication_failure

    # Main API firewall that uses JWT
    api:
      pattern: ^/api
      stateless: true
      jwt: ~
      provider: app_user_provider

  # Access control rules
  access_control:
    # Allow public access to the login path
    - { path: ^/api/login, roles: PUBLIC_ACCESS }

    # Allow anonymous access to all API endpoints for GET requests (categories, habitats, statuses, etc.)
    - { path: ^/api/aviss, roles: PUBLIC_ACCESS, methods: [GET] }
    - { path: ^/api/categories, roles: PUBLIC_ACCESS, methods: [GET] }
    - { path: ^/api/habitats, roles: PUBLIC_ACCESS, methods: [GET] }
    - { path: ^/api/statuses, roles: PUBLIC_ACCESS, methods: [GET] }
    - { path: ^/api/messages, roles: PUBLIC_ACCESS, methods: [GET] }

    # Public access for user registration (POST)
    - { path: ^/api/users, roles: PUBLIC_ACCESS, methods: [POST] }

    # Admin access for listing all users (GET collection)
    - { path: ^/api/users, roles: ROLE_ADMIN, methods: [GET] }

    # Admin or the current user can read or update their own user profile
    - { path: ^/api/users/\d+, roles: ROLE_ADMIN, methods: [GET, PUT] }
    - {
        path: ^/api/users/\d+,
        roles: ROLE_USER,
        methods: [GET, PUT],
        allow_if: "object == user",
      }

    # Only admins can delete users
    - { path: ^/api/users/\d+, roles: ROLE_ADMIN, methods: [DELETE] }

    # Allow everyone to get categories (GET collection or single category), but restrict other category operations to admins
    - {
        path: ^/api/categories,
        roles: ROLE_ADMIN,
        methods: [POST, PUT, DELETE],
      }

    # Require authentication for all other API requests
    - { path: ^/api, roles: ROLE_USER }

when@test:
  security:
    password_hashers:
      Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
        algorithm: auto
        cost: 4 # Lowest possible value for bcrypt
        time_cost: 3 # Lowest possible value for argon
        memory_cost: 10 # Lowest possible value for argon
